<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>helpDialog</class>
 <widget class="QDialog" name="helpDialog">
  <property name="windowModality">
   <enum>Qt::ApplicationModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>428</width>
    <height>998</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Help</string>
  </property>
  <property name="windowIcon">
   <iconset resource="nxspooler.qrc">
    <normaloff>:/img/nxspooler.png</normaloff>:/img/nxspooler.png</iconset>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <widget class="QLabel" name="label_description">
     <property name="font">
      <font>
       <weight>75</weight>
       <bold>true</bold>
      </font>
     </property>
     <property name="text">
      <string>Description</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPlainTextEdit" name="m_description">
     <property name="minimumSize">
      <size>
       <width>400</width>
       <height>0</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>16777215</width>
       <height>320</height>
      </size>
     </property>
     <property name="plainText">
      <string>NxSpooler allows that particular files created in the server (normally by an application and sometimes by the user) can be printed in the local printer of the user.

More precisely: in the computer of the user, NxSpooler monitors if files with certain extensions (for example PDF) appear in a set shared resource. NxSpooler opens every new file that finds so that the user can see it on his screen and print it or save it; when the user closes the viewer application that shows the file, NxSpooler will delete the file if possible. NxSpooler is normally used together with a FreeNX session where a remote program (or sometimes the user) creates files and saves them in the shared resource for a later automatic opening by NxSpooler in the computer of the user (for example, to print the file).

For an advanced use: NxSpooler adds some very basic and easy client/server capabilities: if an application in the server creates a file with the extension &quot;nxspooler-open&quot; in the shared resource, NxSpooler will try to open this file, look inside and if there's a path written there, open this path in the client. The path can be a file, a folder, the address of a shared resource, etc. This is useful, for example, for an application in the server to: open the default file browser in the client to manage the contents of another concrete shared resource, so that the user can immediatly open those server files, save his files in the server, etc.</string>
     </property>
     <property name="textInteractionFlags">
      <set>Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QLabel" name="label_appendix_1">
     <property name="font">
      <font>
       <weight>75</weight>
       <bold>true</bold>
      </font>
     </property>
     <property name="text">
      <string>Appendix 1</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPlainTextEdit" name="m_appendix_1">
     <property name="minimumSize">
      <size>
       <width>400</width>
       <height>0</height>
      </size>
     </property>
     <property name="plainText">
      <string>Example of configuration of the system for NxSpooler, in this case for working with a program called Bulmages that is executed on the server.

Note: to print a report, Bulmages 0.12 first saves it (normally in PDF format) on a folder and then it asks the system that the file is opened; working with FreeNX we want that Bulmages saves the file but in the computer of the user, that Bulmages opens nothing and that NxSpooler opens the file but in the computer of the user.

* The first time:
   + In the server:
      -  To achieve that Bulmages 0.12 does not open PDF, ODS and SCX files in the server (because they have to be opened in the computer of the user): edit /etc/bulmages/bulmages.conf and put the value &quot;echo&quot; in the parameters CONF_PDF. CONF_ODS and CONF_SXC.
      - Note: the user that is going to be connected has to have his own $HOME in the server.
 
   + In the client computer:
      - In Linux: share (using Samba) the folder $HOME/.nxspooler as &quot;nxspooler&quot;, using a particular password and username.
      - In Windows: share the folder %UserProfile%\.nxspooler as &quot;nxspooler$&quot;, using a particular password and username.
      - Note: when sharing, you must be sure that the particular username that will be used to access to the shared resource has permissions to write on it.
      - Configure the NX client program so that the connection normally used to access to the FreeNX server  grants the server access to the shared resource that we talked about. For example, in the Linux program called &quot;nx client&quot; you can go to a tab called &quot;Services&quot;, click on the checkbox &quot;enable SMB printing and file sharing&quot; and click on &quot;Add&quot; to add the resource &quot;nxspooler&quot;, configure that the mount point in the server is ~/.bulmages so that Bulmages uses it in a natural way in the remote session; enter the particular password and username.

* Every time the user starts the FreeNX session:
      - NxSpooler has to be running in the computer of the user, of course :-).
 
This way: the files of the reports that Bulmages makes in the server  will be opened in the client computer, where the user can print them, save them, send them by email, etc.</string>
     </property>
     <property name="textInteractionFlags">
      <set>Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QLabel" name="label_appendix_2">
     <property name="font">
      <font>
       <weight>75</weight>
       <bold>true</bold>
      </font>
     </property>
     <property name="text">
      <string>Appendix 2</string>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QPlainTextEdit" name="m_appendix_2">
     <property name="minimumSize">
      <size>
       <width>400</width>
       <height>0</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>16777215</width>
       <height>84</height>
      </size>
     </property>
     <property name="plainText">
      <string>The Windows installer of NxSpooler modifies &quot;ForegroundLockTimeout&quot; in the registry. This is to try to send to foreground the windows opened by NxSpooler, so that the user doesn't have to click on each one.</string>
     </property>
     <property name="textInteractionFlags">
      <set>Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QDialogButtonBox" name="buttonBox">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="standardButtons">
      <set>QDialogButtonBox::Ok</set>
     </property>
     <property name="centerButtons">
      <bool>true</bool>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <tabstops>
  <tabstop>m_description</tabstop>
  <tabstop>m_appendix_1</tabstop>
  <tabstop>m_appendix_2</tabstop>
  <tabstop>buttonBox</tabstop>
 </tabstops>
 <resources>
  <include location="nxspooler.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>buttonBox</sender>
   <signal>accepted()</signal>
   <receiver>helpDialog</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>248</x>
     <y>254</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>buttonBox</sender>
   <signal>rejected()</signal>
   <receiver>helpDialog</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>316</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
